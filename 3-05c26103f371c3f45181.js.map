{"version":3,"sources":["webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx","webpack:///./node_modules/react-md/lib/Media/index.js"],"names":["PostTags","render","tags","this","props","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_4__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_5___default","label","Component","PostCover","_this$props","fileEdges","postNode","coverHeight","coverClassName","post","frontmatter","coverNodeList","filter","fileNode","node","childImageSharp","absolutePath","indexOf","path","join","cover","length","react_default","gatsby_image_default","fluid","outerWrapperClassName","height","width","coverURL","substring","__PATH_PREFIX__","backgroundImage","queryWrapper","gatsby_browser_entry","query","data","PostCoverComponent","allFile","edges","_590853412","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","Card_default","raise","Media_default","paddingBottom","Media","CardTitle_default","title","Buttons_default","raised","secondary","expander","avatar","Avatars_default","icon","FontIcons_default","iconClassName","moment","date","format","config","dateFormat","subtitle","timeToRead","CardText_default","expandable","excerpt","PostListing","getPostList","postList","postEdges","forEach","postEdge","push","fields","slug","components_PostPreview","React","exports","__esModule","MediaOverlay","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default"],"mappings":"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","file":"3-05c26103f371c3f45181.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\nimport Chip from \"react-md/lib/Chips\";\r\nimport \"./PostTags.scss\";\r\n\r\nclass PostTags extends Component {\r\n  render() {\r\n    const { tags } = this.props;\r\n    return (\r\n      <div className=\"post-tag-container\">\r\n        {tags &&\r\n          tags.map(tag => (\r\n            <Link\r\n              key={tag}\r\n              style={{ textDecoration: \"none\" }}\r\n              to={`/tags/${_.kebabCase(tag)}`}\r\n            >\r\n              <Chip label={tag} className=\"post-preview-tags\" />\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostTags;\r\n","import React, { Component } from \"react\";\r\nimport Img from \"gatsby-image\";\r\nimport path from \"path\";\r\nimport \"./PostCover.scss\";\r\n\r\nclass PostCover extends Component {\r\n  render() {\r\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\r\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\r\n    const coverNodeList = fileEdges.filter(fileNode => {\r\n      if (fileNode.node.childImageSharp === null) return false;\r\n\r\n      if (\r\n        fileNode.node.absolutePath.indexOf(\r\n          path.join(\"/static/assets/\", post.cover)\r\n        ) !== -1\r\n      )\r\n        return true;\r\n\r\n      return false;\r\n    });\r\n\r\n    if (coverNodeList.length === 1) {\r\n      return (\r\n        <Img\r\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\r\n          outerWrapperClassName={coverClassName}\r\n          style={{ height: coverHeight, width: \"100%\" }}\r\n        />\r\n      );\r\n    }\r\n\r\n    /* eslint no-undef: \"off\" */\r\n    const coverURL =\r\n      post.cover.substring(0, 1) === \"/\"\r\n        ? __PATH_PREFIX__ + post.cover\r\n        : post.cover;\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundImage: `url(${coverURL})`,\r\n          height: `${coverHeight}px`\r\n        }}\r\n        className={coverClassName}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostCover;\r\n","import React, { Component } from \"react\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport PostCover from \"./PostCoverComponent\";\r\n\r\nclass queryWrapper extends Component {\r\n  render() {\r\n    const { postNode, coverHeight, coverClassName } = this.props;\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query CoverQuery {\r\n            allFile {\r\n              edges {\r\n                node {\r\n                  id\r\n                  absolutePath\r\n                  childImageSharp {\r\n                    id\r\n                    resolutions {\r\n                      base64\r\n                      tracedSVG\r\n                      aspectRatio\r\n                      width\r\n                      height\r\n                      src\r\n                      srcSet\r\n                      srcWebp\r\n                      srcSetWebp\r\n                      originalName\r\n                    }\r\n                    internal {\r\n                      contentDigest\r\n                      type\r\n                      owner\r\n                    }\r\n                    fluid(maxWidth: 1240) {\r\n                      ...GatsbyImageSharpFluid\r\n                      originalName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `}\r\n        render={data => (\r\n          <PostCover\r\n            fileEdges={data.allFile.edges}\r\n            postNode={postNode}\r\n            coverHeight={coverHeight}\r\n            coverClassName={coverClassName}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default queryWrapper;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-md/lib/Cards/Card\";\r\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\r\nimport Button from \"react-md/lib/Buttons\";\r\nimport Avatar from \"react-md/lib/Avatars\";\r\nimport CardText from \"react-md/lib/Cards/CardText\";\r\nimport FontIcon from \"react-md/lib/FontIcons\";\r\nimport { Link } from \"gatsby\";\r\nimport moment from \"moment\";\r\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\r\nimport PostTags from \"../PostTags\";\r\nimport PostCover from \"../PostCover\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport \"./PostPreview.scss\";\r\n\r\nclass PostPreview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mobile: true\r\n    };\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize() {\r\n    if (window.innerWidth >= 640) {\r\n      this.setState({ mobile: false });\r\n    } else {\r\n      this.setState({ mobile: true });\r\n    }\r\n  }\r\n  render() {\r\n    const { postInfo } = this.props;\r\n    const { mobile } = this.state;\r\n    const expand = mobile;\r\n    /* eslint no-undef: \"off\" */\r\n    const coverHeight = mobile ? 162 : 225;\r\n    return (\r\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\r\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\r\n          <Media style={{ height: coverHeight, paddingBottom: \"0px\" }}>\r\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\r\n            <MediaOverlay>\r\n              <CardTitle title={postInfo.title}>\r\n                <Button raised secondary className=\"md-cell--right\">\r\n                  Read\r\n                </Button>\r\n              </CardTitle>\r\n            </MediaOverlay>\r\n          </Media>\r\n        </Link>\r\n        <CardTitle\r\n          expander={expand}\r\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\r\n          title={`Published on ${moment(postInfo.date).format(\r\n            config.dateFormat\r\n          )}`}\r\n          subtitle={`${postInfo.timeToRead} min read`}\r\n        />\r\n\r\n        <CardText expandable={expand}>\r\n          {postInfo.excerpt}\r\n          <PostTags tags={postInfo.tags} />\r\n        </CardText>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPreview;\r\n","import React from \"react\";\r\nimport PostPreview from \"../PostPreview\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\r\n        <div className=\"md-grid md-cell--8 mobile-fix\">\r\n          {postList.map(post => (\r\n            <PostPreview key={post.title} postInfo={post} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;"],"sourceRoot":""}